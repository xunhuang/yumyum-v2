name: Run Michelin Scraping

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v2
        # with:
        # service_account_email: ${{ secrets.GCP_EMAIL }}
        # service_account_key: ${{ secrets.GCP_CREDENTIALS }}
        # export_default_credentials: true

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - run: cd data/11-05-2022; npm ci; npm install

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - run: npm install -g ts-node
      - run: cd yumutil; npm ci; npm install; npm run build; npm link
      - run: cd tockspecial; npm ci; npm install; npm link yumutil

      - name: backup yumyum db
        run: gcloud sql export sql yumyumdb gs://yumyumbackup/yumyumdb/yumyum-${{ steps.date.outputs.date }}.gz --database=yumyum --project yumyum-v2

      - name: "create-json-file"
        run: cd data/11-05-2022; npx ts-node src/index.ts >> ${{ steps.date.outputs.date }}.json

      - name: "compressing into gz file"
        run: cd data/11-05-2022; gzip ${{ steps.date.outputs.date }}.json

      - id: "upload-folder"
        uses: "google-github-actions/upload-cloud-storage@v2"
        with:
          path: data/11-05-2022/${{ steps.date.outputs.date }}.json.gz
          destination: "yumyum-v2_cloudbuild/yumyum_import"

      - name: "download and json-file"
        run: cd data/11-05-2022; sh runme.sh

      - name: "import data"
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
          GCP_EMAIL: ${{ secrets.GCP_EMAIL }}
        run: cd tockspecial; npx ts-node importMichelinData.ts
